S -> S 'nl' S1 | S1
S1 -> COND | LOOP | COMMENT | RAISE | RET | EXP | ASSIGN | IMPORT | 'pass' | 'break' | 'cont'

COMMENT -> 'sharp' ANY 'nl' | 'triple_quote' ANYNL 'triple_quote'
ANYNL -> ANYNL NL ANY | ε
ANY -> S1 | 'undef' | ε

ASSIGN -> ASSIGNCHAIN | 'id' ASSIGNOP EXP
ASSIGNCHAIN -> 'id' 'eq' ASSIGNCHAIN | 'id' 'eq' EXP
ASSIGNOP -> 'eq' | 'plus' 'eq' | 'min' 'eq' | 'mult' 'eq' | 'div' 'eq' | 'mod' 'eq' | 'div' 'div' 'eq' | 'mult' 'mult' 'eq' | 'amp' 'eq' | 'bor' 'eq' | 'bnot' 'eq' | 'gt' 'gt' 'eq' | 'lt' 'lt' 'eq'

EXP -> PAREXP | LOGICEXP | MATHEXP | FUNCEXP | 'id' 'lb' EXP 'rb' | LIT | 'id'

LIT -> 'real' | 'int' | 'str' | 'false' | 'true' | 'none'
LB -> 'lb' NL
RB -> 'rb' NL

PAREXP -> LP PAREXP1 RP
PAREXP1 -> EXP | PARLOGICEXP | PARMATHEXP
PARLOGICEXP -> EXP NL RELOP NL EXP | 'not' EXP | LOGICEXP
PARMATHEXP -> EXP NL MATHOP2 NL EXP | MATHEXP
LP -> 'lp' NL
RP -> NL 'rp'
NL -> 'nl' | ε

FUNCEXP -> 'id' LP ARGS RP
ARGS -> ARGS1 | ε
ARGS1 -> ARGS1 COMMA EXP | EXP
COMMA -> 'comma' NL

LOGICEXP -> EXP RELOP EXP | 'not' EXP
RELOP -> 'and' | 'or' | 'is' | 'is' 'not' | 'in' | 'not' 'in' | 'iseq' | 'neq' | 'gt' | 'gt' 'eq' | 'lt' | 'lt' 'eq'

MATHEXP -> EXP MATHOP2 EXP | MATHOP1 EXP
MATHOP1 -> 'plus' | 'min' | 'tilde'
MATHOP2 -> 'mult' | 'mult' 'mult' | 'div' | 'div' 'div' | 'mod' | 'plus' | 'min' | 'lt' 'lt' | 'gt' 'gt' | 'amp' | 'bnot' | 'bor'

IMPORT -> 'from' FROMPKG IMPORT | 'import' PKG 'as' 'id' | 'import' PKG
FROMPKG -> 'dot' PKG | 'dot' 'dot' PKG | 'dot'
PKG -> 'id' 'dot' PKG | 'id'

COND -> 'if' EXP COLON S CONDTAIL
COLON -> 'colon' NL
CONDTAIL -> 'elif' EXP COLON S CONDTAIL | CONDTAIL 'else' COLON S | ε

LOOP -> 'for' EXP 'in' EXP COLON S | 'while' EXP COLON S

WITH -> 'with' EXP 'as' 'id' COLON S

RAISE -> RAISE 'from' 'id' | 'raise' 'id' | 'raise' FUNCEXP
RET -> 'return' EXP | 'return'

DEF -> 'def' 'id' LP DEFARGS RP DEFRETT COLON S
DEFARGS -> DEFARGS1 | ε
DEFARGS1 -> DEFARGS1 COMMA 'id' | 'id'
DEFARG -> 'id' COLON ARGTYPE | 'id'
ARGTYPE -> LP ARGTYPE RP | 'id' LB ARGTYPE RB | 'id'
DEFRETT -> 'rarrow' 'id' | ε

CLASS -> 'class' 'id' COLON S
